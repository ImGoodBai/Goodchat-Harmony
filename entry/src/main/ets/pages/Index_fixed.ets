import llmService from '../services/LlmService';
import imageService from '../services/ImageService';
import searchService from '../services/SearchService';
import ChatMessage from '../models/ChatMessage';

@Entry
@Component
struct Index {
  @State inputText: string = '';
  @State title: string = 'Êô∫ËÉΩÂä©Êâã';
  @State isLoading: boolean = false;
  @State errorMessage: string = '';
  @State chatMessages: ChatMessage[] = [];
  @State showChat: boolean = false;
  @State modelType: string = 'chat'; // 'chat', 'image' Êàñ 'search'
  @State imageUrl: string = '';

  /**
   * Ëé∑ÂèñÂΩìÂâçÊ®°ÂºèÁöÑÂõæÊ†á
   */
  getModelIcon(): string {
    switch (this.modelType) {
      case 'chat':
        return 'ü§ñ'; // Êú∫Âô®‰∫∫
      case 'image':
        return 'üé®'; // ÁîªÁ¨î
      case 'search':
        return 'üîç'; // ÊîæÂ§ßÈïú
      default:
        return 'ü§ñ';
    }
  }
  
  /**
   * Ëé∑ÂèñÂΩìÂâçÊ®°ÂºèÁöÑÊ†áÈ¢ò
   */
  getModelTitle(): string {
    switch (this.modelType) {
      case 'chat':
        return '‰∏éÊô∫ËÉΩÂä©ÊâãÂØπËØù';
      case 'image':
        return 'ÁîüÊàêAIÂõæÂÉè';
      case 'search':
        return 'ÂÆûÊó∂ÊêúÁ¥¢‰ø°ÊÅØ';
      default:
        return '‰∏éÊô∫ËÉΩÂä©ÊâãÂØπËØù';
    }
  }
  
  /**
   * Ëé∑ÂèñËæìÂÖ•Ê°ÜÊèêÁ§∫ÊñáÊú¨
   */
  getInputPlaceholder(): string {
    switch (this.modelType) {
      case 'chat':
        return 'ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...';
      case 'image':
        return 'ËØ∑ËæìÂÖ•ÂõæÂÉèÊèèËø∞...';
      case 'search':
        return 'ËØ∑ËæìÂÖ•ÊêúÁ¥¢ÂÜÖÂÆπ...';
      default:
        return 'ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...';
    }
  }
  
  /**
   * Ëé∑ÂèñÊåâÈíÆÊñáÊú¨
   */
  getButtonText(): string {
    switch (this.modelType) {
      case 'chat':
        return 'ÂèëÈÄÅ';
      case 'image':
        return 'ÁîüÊàê';
      case 'search':
        return 'ÊêúÁ¥¢';
      default:
        return 'ÂèëÈÄÅ';
    }
  }

  build() {
    Column() {
      // ÂÜÖÂÆπÂå∫ÂüüÈôêÂà∂ÊúÄÂ§ßÂÆΩÂ∫¶
      Column() {
        // Ê†áÈ¢òÂå∫ÂüüÂíåÊ®°ÂûãÂàáÊç¢
        Row() {
          Text(this.title)
            .id('Title')
            .fontSize(28)
            .fontWeight(FontWeight.Bold)
          
          Blank()
          
          // Ê®°ÂûãÂàáÊç¢ÊåâÈíÆ
          Row() {
            Radio({ value: 'chat', group: 'modelType' })
              .checked(this.modelType === 'chat')
              .onChange((isChecked: boolean) => {
                if (isChecked) {
                  this.modelType = 'chat';
                }
              })
            Text('ËÅäÂ§©')
              .fontSize(16)
              .margin({ right: 10 })
            
            Radio({ value: 'image', group: 'modelType' })
              .checked(this.modelType === 'image')
              .onChange((isChecked: boolean) => {
                if (isChecked) {
                  this.modelType = 'image';
                }
              })
            Text('ÁîªÂõæ')
              .fontSize(16)
              .margin({ right: 10 })
              
            Radio({ value: 'search', group: 'modelType' })
              .checked(this.modelType === 'search')
              .onChange((isChecked: boolean) => {
                if (isChecked) {
                  this.modelType = 'search';
                }
              })
            Text('ÊêúÁ¥¢')
              .fontSize(16)
          }
          .width('auto')
        }
        .width('100%')
        .margin({ top: 20, bottom: 20 })

        if (!this.showChat) {
          // È¶ñÈ°µÊêúÁ¥¢ÁïåÈù¢
          Column() {
            // ‰ΩøÁî®ÊñáÊú¨Êõø‰ª£ÂõæÊ†á
            Text(this.getModelIcon())
              .fontSize(80)
              .margin({ top: 80, bottom: 40 })

            Text(this.getModelTitle())
              .fontSize(24)
              .fontWeight(FontWeight.Medium)
              .margin({ bottom: 60 })

            Row() {
              TextInput({ placeholder: this.getInputPlaceholder() })
                .width('70%')
                .height(50)
                .borderRadius(25)
                .backgroundColor('#f5f5f5')
                .padding({ left: 20, right: 20 })
                .onChange((value: string) => {
                  this.inputText = value;
                })

              Button() {
                Row() {
                  if (this.isLoading) {
                    LoadingProgress()
                      .width(20)
                      .height(20)
                      .color(Color.White)
                  } else {
                    Text(this.getButtonText())
                      .fontColor(Color.White)
                  }
                }
              }
              .width('15%')
              .height(50)
              .borderRadius(25)
              .backgroundColor('#1976D2')
              .margin({ left: 10 })
              .onClick(() => {
                this.sendMessage();
              })
            }
            .width('90%')
            .justifyContent(FlexAlign.Center)
          }
          .width('100%')
          .height('100%')
          .justifyContent(FlexAlign.Start)
          .alignItems(HorizontalAlign.Center)
        } else {
          // ËÅäÂ§©ÁïåÈù¢
          Column() {
            // ËÅäÂ§©Ê∂àÊÅØÂå∫Âüü
            Scroll() {
              Column() {
                ForEach(this.chatMessages, (message: ChatMessage) => {
                  // Ê†πÊçÆÊ∂àÊÅØÁ±ªÂûãÊòæÁ§∫‰∏çÂêåÊ†∑Âºè
                  if (message.type === 'user') {
                    // Áî®Êà∑Ê∂àÊÅØ - Âè≥‰æß
                    Row() {
                      Column() {
                        Text(message.content)
                          .fontSize(16)
                          .backgroundColor('#DCF8C6')
                          .padding(15)
                          .borderRadius(10)
                          .width('100%')
                      }
                      .alignItems(HorizontalAlign.End)
                      .width('80%')
                    }
                    .width('100%')
                    .justifyContent(FlexAlign.End)
                    .margin({ top: 10, bottom: 10 })
                  } else if (message.type === 'assistant') {
                    // AIÊñáÊú¨ÂõûÂ§ç - Â∑¶‰æß
                    Row() {
                      Column() {
                        Text(message.content)
                          .fontSize(16)
                          .padding(15)
                          .borderRadius(10)
                          .width('100%')
                      }
                      .alignItems(HorizontalAlign.Start)
                      .width('80%')
                    }
                    .width('100%')
                    .justifyContent(FlexAlign.Start)
                    .margin({ top: 10, bottom: 10 })
                  } else if (message.type === 'image') {
                    // AIÂõæÂÉèÂõûÂ§ç - Âè≥‰æß
                    Row() {
                      Column() {
                        if (message.content.startsWith('http')) {
                          Image(message.content)
                            .width('100%')
                            .aspectRatio(1)
                            .objectFit(ImageFit.Cover)
                            .borderRadius(10)
                        } else {
                          Text(message.content)
                            .fontSize(16)
                            .backgroundColor('#EAEAEA')
                            .padding(15)
                            .borderRadius(10)
                            .width('100%')
                        }
                      }
                      .alignItems(HorizontalAlign.Start)
                      .width('80%')
                    }
                    .width('100%')
                    .justifyContent(FlexAlign.End)
                    .margin({ top: 10, bottom: 10 })
                  }
                })

                // Âä†ËΩΩ‰∏≠ÊåáÁ§∫Âô®
                if (this.isLoading) {
                  Row() {
                    LoadingProgress()
                      .width(24)
                      .height(24)
                      .color('#1976D2')
                    Text('Ê≠£Âú®ÊÄùËÄÉ...')
                      .fontSize(14)
                      .fontColor('#666666')
                      .margin({ left: 10 })
                  }
                  .width('100%')
                  .justifyContent(FlexAlign.Start)
                  .padding({ left: 20 })
                  .margin({ top: 10, bottom: 10 })
                }
              }
              .width('90%')
              .padding(10)
            }
            .scrollBar(BarState.Auto)
            .scrollBarColor(Color.Gray)
            .scrollBarWidth(4)
            .edgeEffect(EdgeEffect.Spring)
            .width('100%')
            .height('85%')

            // ÈîôËØØ‰ø°ÊÅØÊòæÁ§∫
            if (this.errorMessage !== '') {
              Text(this.errorMessage)
                .fontSize(14)
                .fontColor(Color.Red)
                .width('90%')
                .margin({ top: 5, bottom: 5 })
            }

            // Â∫ïÈÉ®ËæìÂÖ•Âå∫
            Row() {
              TextInput({ placeholder: 'ËæìÂÖ•Ê∂àÊÅØ...' })
                .width('75%')
                .height(50)
                .borderRadius(25)
                .backgroundColor('#f5f5f5')
                .padding({ left: 20, right: 20 })
                .onChange((value: string) => {
                  this.inputText = value;
                })

              Button() {
                Row() {
                  if (this.isLoading) {
                    LoadingProgress()
                      .width(20)
                      .height(20)
                      .color(Color.White)
                  } else {
                    Text('ÂèëÈÄÅ')
                      .fontColor(Color.White)
                  }
                }
              }
              .width('15%')
              .height(50)
              .borderRadius(25)
              .backgroundColor('#1976D2')
              .margin({ left: 10 })
              .onClick(() => {
                this.sendMessage();
              })
            }
            .width('90%')
            .justifyContent(FlexAlign.Center)
            .margin({ top: 10 })
          }
          .width('100%')
          .height('100%')
        }
      }
      .width('100%')
      .maxWidth('900px')
      .alignSelf(ItemAlign.Center)
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#ffffff')
  }

  /**
   * ÂèëÈÄÅÊ∂àÊÅØÂπ∂Ëé∑ÂèñAIÂõûÂ§ç
   */
  async sendMessage() {
    if (this.inputText.trim() === '') {
      this.errorMessage = this.getInputPlaceholder();
      return;
    }

    try {
      // ËÆæÁΩÆÁä∂ÊÄÅ
      this.isLoading = true;
      this.errorMessage = '';
      
      // ÂàõÂª∫Áî®Êà∑Ê∂àÊÅØ
      const userMessage = new ChatMessage(this.inputText, 'user');
      
      // Â¶ÇÊûúÊòØÁ¨¨‰∏ÄÊù°Ê∂àÊÅØÔºåÂàáÊç¢Âà∞ËÅäÂ§©ÁïåÈù¢
      if (this.chatMessages.length === 0) {
        this.showChat = true;
      }
      
      // Ê∑ªÂä†Áî®Êà∑Ê∂àÊÅØ
      this.chatMessages.push(userMessage);
      
      // Ê∏ÖÁ©∫ËæìÂÖ•Ê°Ü
      this.inputText = '';

      // Ê†πÊçÆÊ®°ÂûãÁ±ªÂûãË∞ÉÁî®‰∏çÂêåÁöÑÊúçÂä°
      switch (this.modelType) {
        case 'chat':
          // Ë∞ÉÁî®LLMÊúçÂä°
          const chatResponse = await llmService.queryLlm(userMessage.content);
          
          // ÂàõÂª∫AIÂõûÂ§çÊ∂àÊÅØ
          const aiMessage = new ChatMessage(chatResponse, 'assistant');
          
          // Ê∑ªÂä†AIÂõûÂ§ç
          this.chatMessages.push(aiMessage);
          break;
          
        case 'image':
          // Ë∞ÉÁî®ÁîªÂõæÊúçÂä°
          const loadingMessage = new ChatMessage('Ê≠£Âú®ÁîüÊàêÂõæÂÉè...', 'image');
          this.chatMessages.push(loadingMessage);
          
          // Ë∞ÉÁî®ÂõæÂÉèÁîüÊàêÊúçÂä°
          const imageUrl = await imageService.generateImage(userMessage.content);
          
          // ÁßªÈô§Âä†ËΩΩ‰∏≠Ê∂àÊÅØ
          this.chatMessages.pop();
          
          // ÂàõÂª∫AIÂõæÂÉèÂõûÂ§çÊ∂àÊÅØ
          const imageMessage = new ChatMessage(imageUrl, 'image');
          
          // Ê∑ªÂä†AIÂõæÂÉèÂõûÂ§ç
          this.chatMessages.push(imageMessage);
          break;
          
        case 'search':
          // Ë∞ÉÁî®ÊêúÁ¥¢ÊúçÂä°
          const searchLoadingMessage = new ChatMessage('Ê≠£Âú®ÊêúÁ¥¢‰ø°ÊÅØ...', 'assistant');
          this.chatMessages.push(searchLoadingMessage);
          
          // Ë∞ÉÁî®ÊêúÁ¥¢ÊúçÂä°
          const searchResponse = await searchService.search(userMessage.content);
          
          // ÁßªÈô§Âä†ËΩΩ‰∏≠Ê∂àÊÅØ
          this.chatMessages.pop();
          
          // ÂàõÂª∫ÊêúÁ¥¢ÁªìÊûúÊ∂àÊÅØ
          const searchResultMessage = new ChatMessage(searchResponse, 'assistant');
          
          // Ê∑ªÂä†ÊêúÁ¥¢ÁªìÊûú
          this.chatMessages.push(searchResultMessage);
          break;
      }
    } catch (error) {
      this.errorMessage = `Êü•ËØ¢Â§±Ë¥•: ${error}`;
      console.error(`APIË∞ÉÁî®Â§±Ë¥•: ${error}`);
    } finally {
      this.isLoading = false;
    }
  }
}
